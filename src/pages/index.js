import React, { useState, useEffect } from 'react';
import About4 from "@/components/about/About4";
import Banner3 from "@/components/bannner/Banner3";
import Home3Contact from "@/components/contact/Home3Contact";
import Footer3 from "@/components/footer/Footer3";
import Header from "@/components/header/Header";
import Pricing from "@/components/pricingplan/Pricing4";
import useBodyClass from "@/hooks/useBodyClass";
import Head from "next/head";
import axios from "axios";
import Partnar4 from "@/components/partner/Partnar4";


export default function Home() {
  useBodyClass("home-dark2");
  const [showEdit, setShowEdit] = useState(false);
  const [countries, setCountries] = useState(null);
  const [country, setCountry] = useState(null);
  const [countryName, setCountryName] = useState(null);

  const [currency, setCurrency] = useState(null);
  const [currencylist, setCurrencyList] = useState(null);
  const [ctc, setCTC] = useState(null);
  const [mode, setMode] = useState('yearly');
  const [ctcCalculation, setCtcCalculation] = useState(null);
  const [invoice, setInvoice] = useState(null);
  const [section1, setSection1] = useState([]);

  const API_URL = process.env.NEXT_PUBLIC_API_URL; //"http://localhost:8055/";
  const API_URL_IMAGE = process.env.NEXT_PUBLIC_API_URL_IMAGE; //"http://localhost:8055/uploads/";


  useEffect(() => {
    getWebContent();
    getCountries();
  }, []);

  useEffect(() => {
    if (country) {
      countries.map((item, i) => {
        if (item.id == country) {
          //console.log('item.currencynew', item);
          let currenyArray = []
          if (item.currencynew.length > 0) {
            item.currencynew.map((item2, i) => {
              currenyArray.push({
                name: item2.currency_id.name,
                rate: item2.currency_id.rate
              })
            });

          }
          setCurrencyList(currenyArray);
        }
      });

    }
  }, [country]);

  useEffect(() => {
    if (ctc) {
      ctcCalcuation();
    }
  }, [mode, currency]);

  const getWebContent = async () => {
    try {
      let contentParams = process.env.NEXT_PUBLIC_API_URL + 'items/webcontent';

      let respData = await axios.get(contentParams);
      if (respData.status === 200 && respData.data.data.length > 0) {
        //console.log('contetnrespData >>', respData);
        setSection1(respData.data.data);
      }
    } catch (error) {
      console.error("Error ", error);
    }
  }

  const getCountries = async () => {
    try {
      let countryParams = process.env.NEXT_PUBLIC_API_URL + 'items/countries?fields[]=*&fields[]=currency.name&fields[]=currency.rate&fields[]=currencynew.currency_id.name&fields[]=currencynew.currency_id.rate';

      let respData = await axios.get(countryParams);
      if (respData.status === 200 && respData.data.data.length > 0) {
        //console.log('respData', respData);
        setCountries(respData.data.data);
      }
    } catch (error) {
      console.error("Error ", error);
    }
  }

  const ctcCalcuation = async () => {
    try {
      if (ctc <= 100) {
        setCtcCalculation(null);
        setShowEdit(false);
        return;
      }
      let params = 'country=' + country + '&salary=' + ctc + '&mode=' + mode + '&currency=' + currency;
      let respData = await axios.get(`${API_URL}calculation/salaryCalc?${params}`);

      if (respData.status === 200) {
        setCtcCalculation(respData.data.data);
        setInvoice(API_URL + 'invoice/invoicepdf?country=' + country + '&salary=' + ctc + '&mode=' + mode + '&currency=' + currency)
        setShowEdit(true);
      } else {
        console.log('tstt not ok')
      }

    } catch (error) {
      console.error("Error submitting form:", error);
    }
  }

  return (
    <>
      <Head>
        <title>
          Connect by Vinpro
        </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/assets/img/sm-logo.svg" />
      </Head>

      <Header />
      <Banner3 />

      <div className="home3-solution-section calculationSection">
        <div className="container">
          <div className="row justify-content-center g-4">
            <div
              className="col-lg-6 col-md-6 col-sm-10 wow animate fadeInUp"
              data-wow-delay="300ms"
              data-wow-duration="1500ms"
            >
              {section1.length > 0 ?
                section1.map((item, i) => {
                  if (item?.section_title == 'HomeSection1') {
                    return <div className="section-title-4 home h2white" key={i}>
                      <span>{item?.title}</span>
                      <div dangerouslySetInnerHTML={{ __html: (item?.description) }} />
                    </div>
                  }
                })
                :
                <div className="section-title-4 home">
                  <span>Higring Insights</span>
                  <h2 style={{ color: '#ffffff' }}>Calculate the cost to hire an employee in a new country</h2>
                </div>
              }
              {showEdit &&

                <div className='estimateText mt-3'>
                  <div className="d-flex justify-content-between group-btn mt-2 mb-3">
                    <div class="btn-group btn-small" role="group" aria-label="Basic radio toggle button group">
                      <input type="radio" class="btn-check" onClick={(e) => setMode(e.target.value)} name="btnradio" id="btnradio1" value="monthly" autocomplete="off" checked={mode == "monthly" ? "checked" : ''} />
                      <label class="btn btn-outline-primary" for="btnradio1" >MONTHLY</label>

                      <input type="radio" class="btn-check" onClick={(e) => setMode(e.target.value)} name="btnradio" id="btnradio2" autocomplete="off" value="yearly" checked={mode == "yearly" ? "checked" : ''} />
                      <label class="btn btn-outline-primary" for="btnradio2">ANNUAL</label>
                    </div>
                    <div>
                      <a href={invoice} target='_blank'><button type="button" class="btn btn-outline-primary"> <i className="bi bi-download" /><span> </span>Download</button></a>
                    </div>
                  </div>
                  {ctcCalculation && <div className="d-flex justify-content-between mt-3">
                    <h6 style={{ color: '#fff' }} >Gross Salary</h6>
                    <h6 style={{ color: '#fff' }}>{currency} {(ctcCalculation.salary).toLocaleString()}</h6>
                  </div>
                  }
                  {ctcCalculation && <div className="d-flex justify-content-between">
                    <h6 style={{ color: '#fff' }} >Employeer Cost</h6>
                    <h6 style={{ color: '#fff' }}>{currency} {(ctcCalculation.contribution).toLocaleString()}</h6>
                  </div>
                  }

                  {ctcCalculation && <div className="d-flex justify-content-between">
                    <h6 style={{ color: '#fff' }}>Vinpro Management Fee</h6>
                    <h6 style={{ color: '#fff' }}>{currency} {(ctcCalculation.managementfee).toLocaleString()}</h6>
                  </div>
                  }
                  <hr />
                  {ctcCalculation && <div className="d-flex justify-content-between">
                    <h6 style={{ color: '#fff' }} >Total Cost Of Employee</h6>
                    <h6 style={{ color: '#fff' }}>{currency} {(ctcCalculation.takeHome).toLocaleString()}</h6>
                  </div>
                  }


                  {/*}  <div className="d-flex justify-content-between mt-3">
                    <h6>Gross Monthly Pay</h6>
                    <h6>INR 10,000</h6>
                  </div>
                  <div className="d-flex justify-content-between">
                    <h6>Employee Cost</h6>
                    <h6>INR 500</h6>
                  </div>
                  <div className="d-flex justify-content-between">
                    <h6>Vinpro fee</h6>
                    <h6>INR 500</h6>
                  </div>
                  <div className="d-flex justify-content-between">
                    <h6>Total monthly cost of employee</h6>
                    <h6>INR 24,500</h6>
                  </div>
                  */}
                  <hr />
                  <div className="d-flex align-items-center justify-content-between">
                    <h6 className="mt-3" style={{ color: '#ffffff' }}>Want more detailed information?</h6>
                    <div className="learn-btn"><a class="primary-btn8" href="#">TAlK TO EXPERT<svg width="12" height="12" viewBox="0 0 13 13" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0 1H12M12 1V13M12 1L0.5 12"></path></svg></a></div>
                  </div>
                </div>

              }
            </div>
            <div
              className="col-lg-6 col-md-6 col-sm-10 wow animate fadeInUp"
              data-wow-delay="400ms"
              data-wow-duration="1500ms"
              style={{ margin: 'auto' }}
            >
              <div className="faq-page">
                <div className="contact-form-wrap" style={{ backgroundColor: '#f1f1f1' }}>

                  <div className="contact-form">
                    <form>
                      <div className="row">
                        <div className="col-md-12 mb-20">
                          <div className="form-inner">
                            <select onChange={(e) => { setCountry(e.target.value); setCountryName(e.target[e.target.selectedIndex].getAttribute('name')) }} className="form-select" id="country" aria-label="Select a country you want hire">
                              <option>Select a country you want hire</option>
                              {countries &&
                                countries.map((item, i) => <option value={item.id} name={item.name}>{item.name}</option>)}
                            </select>
                          </div>
                        </div>
                        <div className="col-lg-6 mb-20">
                          <div className="form-inner">
                            <select onChange={(e) => { setCurrency(e.target.value); setCTC(null) }} className="form-select" id="currency" aria-label="Currency">
                              <option >Currency</option>
                              {currencylist &&
                                currencylist.map((item, i) => <option value={item.name}>{item.name}</option>)}
                            </select>
                          </div>
                        </div>
                        <div className="col-lg-6 mb-20">
                          <div className="form-inner">
                            {ctc ? <input type="text" onChange={(e) => setCTC(e.target.value)} value={ctc} placeholder="Gross Annual Salary" /> : <input type="text" onChange={(e) => setCTC(e.target.value)} value="" placeholder="Gross Annual Salary" />}
                          </div>
                        </div>
                        <div className="col-lg-12 mb-20 ">
                          <div className="d-flex flex-row">
                            <p>Eligible to work in {countryName}?</p>
                            <div className="form-check">
                              <input className="radio-btn" type="radio" name="inlineCheckbox" />
                              <label className="form-check-label" for="inlineCheckbox">Yes</label>
                            </div>
                            <div class="form-check">
                              <input className="radio-btn" type="radio" name="inlineCheckbox" />
                              <label className="form-check-label" for="inlineCheckbox">No</label>
                            </div>
                          </div>
                        </div>

                        <div className="col-lg-12 text-center">
                          <div className="form-inner">
                            {currency && country && ctc ?
                              <button className="primary-btn3" type="button" onClick={() => ctcCalcuation()}>
                                Calculate
                              </button> :
                              <button className="primary-btn1" type="button" disabled >Calculate</button>
                            }
                          </div>
                        </div>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <About4 data={section1} />
      <div className="home4-trusted-client-area" style={{ marginTop: 120, marginLeft:88, marginRight:88 }}>
          <Partnar4 />
        </div>
      <Pricing />
      <Home3Contact />

      {/* <Partner3 /> 
      <Solution3 />
      <About3 />
      <SuccessStory3 />
      <Testimonial3 />
      <PricingPlan3 />
      <Home3Contact />
      <Home3Team />
      <Home3Blog />*/}
      <Footer3 />
    </>
  );
}
